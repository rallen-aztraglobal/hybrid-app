plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

def localProperties = new Properties()
def localFile = rootProject.file("local.properties")
if (localFile.exists()) {
    localFile.withInputStream { stream -> localProperties.load(stream) }
}

android {
    namespace 'com.hybrid.android'
    compileSdk 36

    defaultConfig {
        applicationId "com.gamezone.gzmkt031"
        minSdk 29
        targetSdk 36
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a' // 只支持这两个架构
        }
    }
    flavorDimensions "channel"
    productFlavors {
        gzmkt031 {
            dimension "channel"
            applicationId "com.gamezone.gzmkt031"
            resValue "string", "app_name", "Game Zone VIP"
            // 添加 AppsFlyer Key 和 Web 域名
            buildConfigField "String", "AF_DEV_KEY", "\"fXoKsKQwxPCRdhD8CD8q6F\""
            buildConfigField "String", "PAL_CODE", "\"1158040429090598912\""
        }
    }

    signingConfigs {
        release {
            storeFile file(localProperties.get("KEYSTORE_FILE"))
            storePassword localProperties.get("KEYSTORE_PASSWORD")
            keyAlias localProperties.get("KEY_ALIAS")
            keyPassword localProperties.get("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.fragment.ktx

    implementation libs.webview.interceptor
    implementation libs.af.android.sdk
    implementation libs.gms.play.services.ads.identifier
    implementation libs.play.services.appset
    implementation libs.filament.android

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

}